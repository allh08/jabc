{"version":3,"sources":["components/AppHeader.js","components/ActivityCard.js","pages/Home.js","components/NextButton.js","pages/career/StartPage.js","components/StarProgressBar.js","pages/career/DragAndDropPage.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","AppBar","position","color","Toolbar","to","style","textDecoration","src","alt","className","ActivityCard","this","props","classes","title","description","imageSrc","link","Card","root","CardActionArea","CardMedia","media","image","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","React","Component","withStyles","maxWidth","height","Home","Fragment","useStyles","makeStyles","nextButton","alignItems","justify","direction","NextButton","Grid","container","content","width","margin","justifyContent","StartPage","Box","StarProgressBar","maxStars","currStars","stickToBottom","Array","apply","map","x","i","fontSize","Star","StarBorder","bottom","display","backgroundColor","DragAndDropPage","axis","handle","bounds","defaultPosition","y","grid","scale","careerRoutes","path","render","url","match","exact","theme","main","padding","spacing","breakpoints","down","CssBaseline","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a056e28.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  AppBar,\n  Toolbar\n} from '@material-ui/core';\n\nconst AppHeader = () => (\n  <AppBar position=\"static\" color=\"white\">\n    <Toolbar>\n      <Link to='/' style={{ textDecoration: 'none' }}>\n        <img src=\"https://businesslaureatesbc.org/wp-content/uploads/2016/10/JA-British-Columbia_Primary_Preferred_Opt2_600.png\" alt=\"logo\" className='icon' style={{'height':'5em', 'margin':'2em'}} />\n      </Link>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default AppHeader;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withStyles } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 240,\n  },\n};\n\nclass ActivityCard extends React.Component {\n\n\n  render() {\n    const { classes, title, description, imageSrc, link } = this.props;\n    return (\n      <Link to={link} style={{ textDecoration: 'none' }}>\n        <Card className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={imageSrc}\n              title={title}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Career Cluster\n            </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {description}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\">\n              Share\n          </Button>\n            <Button size=\"small\" color=\"primary\">\n              Learn More\n          </Button>\n          </CardActions>\n        </Card>\n      </Link>\n    );\n  }\n}\n\nexport default withStyles(styles)(ActivityCard);\n","import React from 'react';\nimport ActivityCard from '../components/ActivityCard';\n\nexport default function Home() {\n\n  return (\n    <React.Fragment>\n    <ActivityCard\n      title=\"Career Clustering\"\n      imageSrc=\"card1.png\"\n      link=\"/career/start\"\n      description=\"In this course you will go on a bit of a journey of self-discovery. It begins with an activity meant to help categorize your interests, skills, strengths and passions.\"\n    />\n\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n  nextButton: {\n    alignItems: 'flex-start',\n    justify: 'flex-end',\n    direction: 'row'\n  }\n})\n\nconst NextButton = (props) => {\n  const classes = useStyles();\n  const {link} = props;\n  return (\n    <Grid container className={classes.nextButton} justify='flex-end'>\n\n      <Link to={link} style={{ textDecoration: 'none' }}>\n        <Button variant=\"contained\">Next</Button>\n      </Link>\n    </Grid>\n  );\n}\n\nexport default NextButton;\n","import React from 'react';\nimport {\n  Box,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\n\nimport NextButton from '../../components/NextButton';\n\nconst useStyles = makeStyles({\n  content: {\n    width: '60%',\n    margin: 'auto',\n    justifyContent: 'center'\n  }\n})\n\nconst StartPage = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Box className={classes.content}>\n        <Typography variant=\"h2\" >\n          Welcome\n        </Typography>\n\n        <img src=\"https://www.jobbank.gc.ca/themes-jb/images/quiz/quiz_intelligences.svg\" alt=\"logo\" className='icon' style={{ 'height': '20em', 'margin': '2em' }} />\n        <Typography variant=\"body1\">\n\n          If you were to compare your goals with those of friends, you'd probably notice that lots of you have different goals.\n\n          Goals are often different because everyone has different interests, skills, strengths, and passions.  You need to know about yourself to set appropriate goals.\n\n          In this course you will go on a bit of a journey of self-discovery. It begins with an activity meant to help categorize your interests, skills, strengths and passions. Complete the Career Word Cloud to the right to begin.\n\n          Once you've chosen the words that best align with your interests, move the slider at the bottom of the image to the right to see how your interests align with various career clusters.\n\n        </Typography>\n        \n        <NextButton link=\"/career/dragdrop\" />\n      </Box>\n\n\n    </React.Fragment>\n  );\n}\n\n\nexport default StartPage;\n","import React from 'react';\nimport { Star, StarBorder } from '@material-ui/icons'\nimport { Box } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = {\n  stickToBottom: {\n    width: '100%',\n    height: '10em',\n    position: 'fixed',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'gold',\n    backgroundColor: 'white'\n  },\n};\n\nclass StarProgressBar extends React.Component {\n\n  render() {\n    const { classes, maxStars, currStars } = this.props;\n    return (\n      <Box className={classes.stickToBottom}>\n        {\n          Array.apply(0, Array(currStars)).map(function (x, i) {\n            let fontSize = 40 * (1.2 ** i);\n            return <Star style={{ fontSize }} />;\n          })\n        }\n        {\n          Array.apply(0, Array(maxStars - currStars)).map(function (x, i) {\n            let fontSize = 40 * (1.2 ** (currStars + i));\n            return <StarBorder style={{ fontSize }} />;\n          })\n        }\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(styles)(StarProgressBar);\n","import React from 'react';\nimport {\n  makeStyles,\n  Box,\n  Typography\n} from '@material-ui/core';\n\nimport Draggable from 'react-draggable';\nimport StarProgressBar from '../../components/StarProgressBar';\nimport NextButton from '../../components/NextButton';\n\nconst useStyles = makeStyles({\n  content: {\n    width: '60%',\n    margin: 'auto',\n    justifyContent: 'center'\n  }\n})\n\nconst DragAndDropPage = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box className={classes.content}>\n        <Draggable\n          axis=\"x\"\n          handle=\".handle\"\n          bounds=\"parent\"\n          defaultPosition={{ x: 0, y: 0 }}\n          position={null}\n          grid={[25, 25]}\n          scale={1}>\n          <div>\n            <div className=\"handle\">Drag from here</div>\n            <div>This readme is really dragging on...</div>\n          </div>\n        </Draggable>\n        <NextButton link=\"/career/dragdrop\" />\n      </Box>\n      <StarProgressBar currStars={1} maxStars={5} />\n    </React.Fragment>\n  );\n}\n\n\nexport default DragAndDropPage;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport {\n  CssBaseline,\n  withStyles,\n} from '@material-ui/core';\n\nimport AppHeader from './components/AppHeader';\nimport Home from './pages/Home';\nimport StartPage from  './pages/career/StartPage';\nimport DragAndDropPage from  './pages/career/DragAndDropPage';\n\nconst styles = theme => ({\n  main: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(2),\n    },\n  },\n});\n\nconst careerRoutes = (\n  <Route\n    path=\"/career\"\n    render={({ match: { url } }) => (\n      <>\n        <Route path={`${url}/`} component={StartPage} exact />\n        <Route path={`${url}/start`} component={StartPage} />\n        <Route path={`${url}/dragdrop`} component={DragAndDropPage} />\n      </>\n    )}\n  />\n)\n\nconst App = ({ classes }) => (\n  <Fragment>\n    <CssBaseline />\n    <AppHeader />\n    <main className={classes.main}>\n      <Route exact path=\"/\" component={Home} />\n      {careerRoutes}\n    </main>\n  </Fragment>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}